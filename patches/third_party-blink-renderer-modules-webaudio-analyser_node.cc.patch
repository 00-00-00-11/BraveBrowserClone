diff --git a/third_party/blink/renderer/modules/webaudio/analyser_node.cc b/third_party/blink/renderer/modules/webaudio/analyser_node.cc
index d90c8434c24a2e555443cef02aeb9d2ed9f823d3..b6df240df62ece3ad9ef884cf26ba08912414673 100644
--- a/third_party/blink/renderer/modules/webaudio/analyser_node.cc
+++ b/third_party/blink/renderer/modules/webaudio/analyser_node.cc
@@ -23,8 +23,10 @@
  * DAMAGE.
  */
 
+#include "brave/renderer/brave_content_settings_observer_helper.h"
 #include "third_party/blink/renderer/bindings/core/v8/exception_messages.h"
 #include "third_party/blink/renderer/bindings/core/v8/exception_state.h"
+#include "third_party/blink/renderer/core/dom/document.h"
 #include "third_party/blink/renderer/core/dom/exception_code.h"
 #include "third_party/blink/renderer/modules/webaudio/analyser_node.h"
 #include "third_party/blink/renderer/modules/webaudio/analyser_options.h"
@@ -274,20 +276,28 @@ double AnalyserNode::smoothingTimeConstant() const {
 }
 
 void AnalyserNode::getFloatFrequencyData(NotShared<DOMFloat32Array> array) {
+  if (!AllowFingerprinting(ToDocument(GetExecutionContext())->GetFrame()))
+    return;
   GetAnalyserHandler().GetFloatFrequencyData(array.View(),
                                              context()->currentTime());
 }
 
 void AnalyserNode::getByteFrequencyData(NotShared<DOMUint8Array> array) {
+  if (!AllowFingerprinting(ToDocument(GetExecutionContext())->GetFrame()))
+    return;
   GetAnalyserHandler().GetByteFrequencyData(array.View(),
                                             context()->currentTime());
 }
 
 void AnalyserNode::getFloatTimeDomainData(NotShared<DOMFloat32Array> array) {
+  if (!AllowFingerprinting(ToDocument(GetExecutionContext())->GetFrame()))
+    return;
   GetAnalyserHandler().GetFloatTimeDomainData(array.View());
 }
 
 void AnalyserNode::getByteTimeDomainData(NotShared<DOMUint8Array> array) {
+  if (!AllowFingerprinting(ToDocument(GetExecutionContext())->GetFrame()))
+    return;
   GetAnalyserHandler().GetByteTimeDomainData(array.View());
 }
 
