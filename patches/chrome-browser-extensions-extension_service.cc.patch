diff --git a/chrome/browser/extensions/extension_service.cc b/chrome/browser/extensions/extension_service.cc
index 9410c6daeabccba17d72244f2395c150aa84283a..8c9d8397e8101c5b6f053229185bddac9b610ec9 100644
--- a/chrome/browser/extensions/extension_service.cc
+++ b/chrome/browser/extensions/extension_service.cc
@@ -28,6 +28,8 @@
 #include "base/threading/thread_task_runner_handle.h"
 #include "base/time/time.h"
 #include "base/trace_event/trace_event.h"
+#include "brave/browser/extensions/brave_component_loader.h"
+#include "brave/extensions/browser/brave_extension_prefs.h"
 #include "build/build_config.h"
 #include "chrome/browser/browser_process.h"
 #include "chrome/browser/chrome_notification_types.h"
@@ -350,7 +352,7 @@ ExtensionService::ExtensionService(Profile* profile,
   }
 
   component_loader_.reset(
-      new extensions::ComponentLoader(this,
+      new extensions::BraveComponentLoader(this,
                                       profile->GetPrefs(),
                                       g_browser_process->local_state(),
                                       profile));
@@ -1374,6 +1376,23 @@ void ExtensionService::AddComponentExtension(const Extension* extension) {
   }
 
   AddExtension(extension);
+#if defined(BRAVE_CHROMIUM_BUILD)
+  // ContentSettingsStore::RegisterExtension is only called for default components
+  // on the first run with a fresh profile. All restarts of the browser after that do not call it.
+  // This causes ContentSettingsStore's `entries_` to never insert the component ID
+  // and then  ContentSettingsStore::GetValueMap always returns nullptr.
+  // I don't think Chromium is affeced by this simply because they don't use content settings
+  // from default component extensions.
+  extension_prefs_->OnExtensionInstalled(extension, Extension::ENABLED,
+                                         syncer::StringOrdinal(),
+                                         extensions::kInstallFlagNone,
+                                         std::string(),
+                                         base::nullopt);
+  // Trigger ContentSettingsService::OnExtensionPrefsLoaded to populate pref
+  // values into content setting store.
+  static_cast<extensions::BraveExtensionPrefs*>(extension_prefs_)
+    ->NotifyExtensionPrefsLoaded(extension->id());
+#endif
 }
 
 void ExtensionService::CheckPermissionsIncrease(const Extension* extension,
